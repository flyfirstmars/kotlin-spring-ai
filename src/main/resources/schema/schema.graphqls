scalar Upload

type Query {
    getChatResponse(conversationId: String, logicType: LogicType, message: String): ChatResponse
    getAllMessages(conversationId: String!): [Message]
    chatCompletion(userPrompt: String!): String
}

type Mutation {
    clearConversation(conversationId: String!): Boolean
    imageAnalysis(image: Upload!): String
}

type ChatResponse {
    conversationId: String
    response: String
}

type Message {
    id: ID
    content: String
    timestamp: String
}

enum LogicType {
    ADVISOR
    NO_ADVISOR
}

type Subscription {
    streamChatCompletion(userPrompt: String!): String
    streamChatCompletionWithImageAnalysis(image: Upload!): String
}

